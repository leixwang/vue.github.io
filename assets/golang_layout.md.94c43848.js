import{_ as e,o as a,c as o,U as r}from"./chunks/framework.92bf3306.js";const q=JSON.parse('{"title":"golang 编程规范 - 项目目录结构","description":"","frontmatter":{},"headers":[],"relativePath":"golang/layout.md","filePath":"golang/layout.md","lastUpdated":1689738962000}'),d={name:"golang/layout.md"},t=r('<h1 id="golang-编程规范-项目目录结构" tabindex="-1">golang 编程规范 - 项目目录结构 <a class="header-anchor" href="#golang-编程规范-项目目录结构" aria-label="Permalink to &quot;golang 编程规范 - 项目目录结构&quot;">​</a></h1><h2 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h2><p>项目的目录结构通常是项目的门面, 使用开人员很快的入手和项目一面了然.</p><h2 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;Server&quot;">​</a></h2><h3 id="api" tabindex="-1"><code>/api</code> <a class="header-anchor" href="#api" aria-label="Permalink to &quot;`/api`&quot;">​</a></h3><h3 id="model" tabindex="-1"><code>/model</code> <a class="header-anchor" href="#model" aria-label="Permalink to &quot;`/model`&quot;">​</a></h3><p>模型或数据的定义</p><h3 id="cmd" tabindex="-1"><code>/cmd</code> <a class="header-anchor" href="#cmd" aria-label="Permalink to &quot;`/cmd`&quot;">​</a></h3><p>项目主要的是应用程序.</p><h3 id="internal" tabindex="-1"><code>/internal</code> <a class="header-anchor" href="#internal" aria-label="Permalink to &quot;`/internal`&quot;">​</a></h3><p>存放私有应用和库代码. 一些代码, 比较私密的, 不希望在其他应用和库中被导入, 可以将这部分代码放在 <code>/internal</code> 目录下.</p><h3 id="pkg" tabindex="-1"><code>/pkg</code> <a class="header-anchor" href="#pkg" aria-label="Permalink to &quot;`/pkg`&quot;">​</a></h3><p>存放可以被外部应用使用的代码库和项目使用到的一些通用方法.</p><h3 id="router" tabindex="-1"><code>/router</code> <a class="header-anchor" href="#router" aria-label="Permalink to &quot;`/router`&quot;">​</a></h3><p>存放项目的路由文件</p><h3 id="util" tabindex="-1"><code>/util</code> <a class="header-anchor" href="#util" aria-label="Permalink to &quot;`/util`&quot;">​</a></h3><p>存放项目上中的工具</p><h3 id="service" tabindex="-1"><code>/service</code> <a class="header-anchor" href="#service" aria-label="Permalink to &quot;`/service`&quot;">​</a></h3><p>项目中新的协程服务</p><h3 id="handler" tabindex="-1"><code>/handler</code> <a class="header-anchor" href="#handler" aria-label="Permalink to &quot;`/handler`&quot;">​</a></h3><h2 id="product" tabindex="-1">product <a class="header-anchor" href="#product" aria-label="Permalink to &quot;product&quot;">​</a></h2><h3 id="configs" tabindex="-1"><code>/configs</code> <a class="header-anchor" href="#configs" aria-label="Permalink to &quot;`/configs`&quot;">​</a></h3><p>存放配置文件模板默认配置.</p><h3 id="init" tabindex="-1"><code>/init</code> <a class="header-anchor" href="#init" aria-label="Permalink to &quot;`/init`&quot;">​</a></h3><p>存放初始化系统和进程管理配置文件.</p><h2 id="projcet" tabindex="-1">projcet <a class="header-anchor" href="#projcet" aria-label="Permalink to &quot;projcet&quot;">​</a></h2><h3 id="makefile" tabindex="-1"><code>Makefile</code> <a class="header-anchor" href="#makefile" aria-label="Permalink to &quot;`Makefile`&quot;">​</a></h3><p><code>Makefile</code> 工具, 用来对项目进行管理.</p><h3 id="build" tabindex="-1"><code>/build</code> <a class="header-anchor" href="#build" aria-label="Permalink to &quot;`/build`&quot;">​</a></h3><p>存放安装包和持续集成相关的文件.</p><h3 id="tools" tabindex="-1"><code>/tools</code> <a class="header-anchor" href="#tools" aria-label="Permalink to &quot;`/tools`&quot;">​</a></h3><p>存放项目的需要使用的工具.</p><h2 id="doc" tabindex="-1">doc <a class="header-anchor" href="#doc" aria-label="Permalink to &quot;doc&quot;">​</a></h2><h3 id="readme-md" tabindex="-1"><code>README.md</code> <a class="header-anchor" href="#readme-md" aria-label="Permalink to &quot;`README.md`&quot;">​</a></h3><p>项目简介和使用文档</p><h3 id="docs" tabindex="-1"><code>/docs</code> <a class="header-anchor" href="#docs" aria-label="Permalink to &quot;`/docs`&quot;">​</a></h3><p>项目详细的文档</p><h3 id="logs" tabindex="-1"><code>/logs</code> <a class="header-anchor" href="#logs" aria-label="Permalink to &quot;`/logs`&quot;">​</a></h3><p>存放项目的 <code>logs</code> 日志文件</p><h3 id="license" tabindex="-1"><code>LICENSE</code> <a class="header-anchor" href="#license" aria-label="Permalink to &quot;`LICENSE`&quot;">​</a></h3><p>项目的版本</p><h3 id="changelog" tabindex="-1"><code>CHANGELOG</code> <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;`CHANGELOG`&quot;">​</a></h3><p>项目的版本更新日志</p><h2 id="website" tabindex="-1">website <a class="header-anchor" href="#website" aria-label="Permalink to &quot;website&quot;">​</a></h2><h3 id="web-或-website" tabindex="-1"><code>/web</code> 或 <code>/website</code> <a class="header-anchor" href="#web-或-website" aria-label="Permalink to &quot;`/web` 或 `/website`&quot;">​</a></h3><p>前端代码存放目录, 主要用来存放 <code>web</code> 静态资源, 服务端模板和单页应用. 例如: <code>React</code>, <code>vuejs</code>, <code>nuxtjs</code>, <code>nextjs</code> ...</p>',46),i=[t];function l(c,h,n,s,u,b){return a(),o("div",null,i)}const m=e(d,[["render",l]]);export{q as __pageData,m as default};
